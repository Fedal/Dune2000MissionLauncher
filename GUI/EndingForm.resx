<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>